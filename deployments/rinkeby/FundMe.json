{
  "address": "0x67187945c4B9F24CCE68165cedb070AfE7AB8a7d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "iOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc52cc54ec8019bb4a8329f69faa11d09266dab70ffbd88caab29d9531e3f6e01",
  "receipt": {
    "to": null,
    "from": "0xd755204bB2BF3A17CFCBc72f885044E7fBd23350",
    "contractAddress": "0x67187945c4B9F24CCE68165cedb070AfE7AB8a7d",
    "transactionIndex": 6,
    "gasUsed": "729224",
    "logsBloom": "0x
    "blockHash": "0xf04ff44acdf39c9dd22fe44bcba8d25249f341f047e6f8e1f85337813a9cc687",
    "transactionHash": "0xc52cc54ec8019bb4a8329f69faa11d09266dab70ffbd88caab29d9531e3f6e01",
    "logs": [],
    "blockNumber": 11404460,
    "cumulativeGasUsed": "1289070",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "ca03a6518405e2cbdbf50fcec1ce4b5f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"/* \\n    * Get funds from users\\n    * Withdraw funds\\n    * Set a minimum funding value in USD\\n\\n */\\n\\n// SPDX-License-Identifier: None\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    // 21,415 gas - constant\\n    // 23,515 gas - non-constant\\n\\n    address[] public funders;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable iOwner;\\n\\n    // 21,508 gas - immutable\\n    // 23,644 gas - non-immutable\\n\\n    AggregatorV3Interface immutable public priceFeed;\\n\\n    constructor(address _priceFeedAddress) {\\n        iOwner = msg.sender;\\n        priceFeed = AggregatorV3Interface(\\n            _priceFeedAddress\\n        );\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // Reset the array\\n        funders = new address[](0);\\n\\n        // Actually withdraw the funds\\n\\n        // Call - forward all remaining gas, returns bool\\n        // (bool callSuccess, ) = payable(msg.sender).call{\\n        //     value: address(this).balance\\n        // }(\\\"\\\");\\n        // require(callSuccess, \\\"Call Failed\\\");\\n\\n        // Transfer - 2300 gas, throws error if fails\\n        payable(msg.sender).transfer(address(this).balance);\\n\\n        // // Send - 2300 gas, returns false if fails\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess,\\\"Send Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != iOwner) {\\n            revert NotOwner();\\n        }\\n        // require(,\\\"Sender is not owner\\\");\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x44bde63ba6e9f1a6390e704af4f8bbbe41b6be808f72537022d26cb9aa00bf18\",\"license\":\"None\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: None\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // ABI\\n        // Address (Rinkeby)\\t0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        /**\\n         * ETH In terms of USD\\n         * 'price' has 8 decimals\\n         * 'msg.value' has 18 decimals\\n         * multiply by 1e10 to make it equal to 1e18\\n         */\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPriceInUSD = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethPriceInUSD * ethAmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0xa2ee004c14d0369d121b3a4e1c1bfed2a5a89203fbcf667249c3a5743b741c1a\",\"license\":\"None\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610d98380380610d9883398181016040528101906100329190610103565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050610130565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d0826100a5565b9050919050565b6100e0816100c5565b81146100eb57600080fd5b50565b6000815190506100fd816100d7565b92915050565b600060208284031215610119576101186100a0565b5b6000610127848285016100ee565b91505092915050565b60805160a051610c35610163600039600081816101b801526104d10152600081816102d201526104f50152610c356000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c57806377c9dd4b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d0565b005b3480156100b057600080fd5b506100cb60048036038101906100c6919061072d565b6104aa565b6040516100d89190610773565b60405180910390f35b3480156100ed57600080fd5b506100f66104c2565b6040516101039190610773565b60405180910390f35b34801561011857600080fd5b506101216104cf565b60405161012e91906107ed565b60405180910390f35b34801561014357600080fd5b5061014c6104f3565b6040516101599190610817565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061085e565b610517565b6040516101a09190610817565b60405180910390f35b6802b5e3af16b18800006101e67f00000000000000000000000000000000000000000000000000000000000000003461055690919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e906108e8565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040057600080828154811061037a57610379610908565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f890610966565b915050610358565b50600067ffffffffffffffff81111561041c5761041b6109ae565b5b60405190808252806020026020018201604052801561044a5781602001602082028036833780820191505090505b5060009080519060200190610460929190610623565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104a7573d6000803e3d6000fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061052757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061056283610592565b90506000670de0b6b3a7640000858361057b91906109dd565b6105859190610a4e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190610b0c565b5050509150506402540be4008161061b9190610b87565b915050919050565b82805482825590600052602060002090810192821561069c579160200282015b8281111561069b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610643565b5b5090506106a991906106ad565b5090565b5b808211156106c65760008160009055506001016106ae565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106fa826106cf565b9050919050565b61070a816106ef565b811461071557600080fd5b50565b60008135905061072781610701565b92915050565b600060208284031215610743576107426106ca565b5b600061075184828501610718565b91505092915050565b6000819050919050565b61076d8161075a565b82525050565b60006020820190506107886000830184610764565b92915050565b6000819050919050565b60006107b36107ae6107a9846106cf565b61078e565b6106cf565b9050919050565b60006107c582610798565b9050919050565b60006107d7826107ba565b9050919050565b6107e7816107cc565b82525050565b600060208201905061080260008301846107de565b92915050565b610811816106ef565b82525050565b600060208201905061082c6000830184610808565b92915050565b61083b8161075a565b811461084657600080fd5b50565b60008135905061085881610832565b92915050565b600060208284031215610874576108736106ca565b5b600061088284828501610849565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006108d260128361088b565b91506108dd8261089c565b602082019050919050565b60006020820190508181036000830152610901816108c5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109718261075a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109a3576109a2610937565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006109e88261075a565b91506109f38361075a565b9250828202610a018161075a565b91508282048414831517610a1857610a17610937565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a598261075a565b9150610a648361075a565b925082610a7457610a73610a1f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610a9e81610a7f565b8114610aa957600080fd5b50565b600081519050610abb81610a95565b92915050565b6000819050919050565b610ad481610ac1565b8114610adf57600080fd5b50565b600081519050610af181610acb565b92915050565b600081519050610b0681610832565b92915050565b600080600080600060a08688031215610b2857610b276106ca565b5b6000610b3688828901610aac565b9550506020610b4788828901610ae2565b9450506040610b5888828901610af7565b9350506060610b6988828901610af7565b9250506080610b7a88828901610aac565b9150509295509295909350565b6000610b9282610ac1565b9150610b9d83610ac1565b9250828202610bab81610ac1565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610be357610be2610937565b5b8282058414831517610bf857610bf7610937565b5b509291505056fea264697066735822122011c71d30e91cc09f03345b308a23353b486e6da3154feb0dbed609c18d51dc0064736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c57806377c9dd4b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d0565b005b3480156100b057600080fd5b506100cb60048036038101906100c6919061072d565b6104aa565b6040516100d89190610773565b60405180910390f35b3480156100ed57600080fd5b506100f66104c2565b6040516101039190610773565b60405180910390f35b34801561011857600080fd5b506101216104cf565b60405161012e91906107ed565b60405180910390f35b34801561014357600080fd5b5061014c6104f3565b6040516101599190610817565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061085e565b610517565b6040516101a09190610817565b60405180910390f35b6802b5e3af16b18800006101e67f00000000000000000000000000000000000000000000000000000000000000003461055690919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e906108e8565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040057600080828154811061037a57610379610908565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f890610966565b915050610358565b50600067ffffffffffffffff81111561041c5761041b6109ae565b5b60405190808252806020026020018201604052801561044a5781602001602082028036833780820191505090505b5060009080519060200190610460929190610623565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104a7573d6000803e3d6000fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061052757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061056283610592565b90506000670de0b6b3a7640000858361057b91906109dd565b6105859190610a4e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190610b0c565b5050509150506402540be4008161061b9190610b87565b915050919050565b82805482825590600052602060002090810192821561069c579160200282015b8281111561069b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610643565b5b5090506106a991906106ad565b5090565b5b808211156106c65760008160009055506001016106ae565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106fa826106cf565b9050919050565b61070a816106ef565b811461071557600080fd5b50565b60008135905061072781610701565b92915050565b600060208284031215610743576107426106ca565b5b600061075184828501610718565b91505092915050565b6000819050919050565b61076d8161075a565b82525050565b60006020820190506107886000830184610764565b92915050565b6000819050919050565b60006107b36107ae6107a9846106cf565b61078e565b6106cf565b9050919050565b60006107c582610798565b9050919050565b60006107d7826107ba565b9050919050565b6107e7816107cc565b82525050565b600060208201905061080260008301846107de565b92915050565b610811816106ef565b82525050565b600060208201905061082c6000830184610808565b92915050565b61083b8161075a565b811461084657600080fd5b50565b60008135905061085881610832565b92915050565b600060208284031215610874576108736106ca565b5b600061088284828501610849565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006108d260128361088b565b91506108dd8261089c565b602082019050919050565b60006020820190508181036000830152610901816108c5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109718261075a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109a3576109a2610937565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006109e88261075a565b91506109f38361075a565b9250828202610a018161075a565b91508282048414831517610a1857610a17610937565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a598261075a565b9150610a648361075a565b925082610a7457610a73610a1f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610a9e81610a7f565b8114610aa957600080fd5b50565b600081519050610abb81610a95565b92915050565b6000819050919050565b610ad481610ac1565b8114610adf57600080fd5b50565b600081519050610af181610acb565b92915050565b600081519050610b0681610832565b92915050565b600080600080600060a08688031215610b2857610b276106ca565b5b6000610b3688828901610aac565b9550506020610b4788828901610ae2565b9450506040610b5888828901610af7565b9350506060610b6988828901610af7565b9250506080610b7a88828901610aac565b9150509295509295909350565b6000610b9282610ac1565b9150610b9d83610ac1565b9250828202610bab81610ac1565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610be357610be2610937565b5b8282058414831517610bf857610bf7610937565b5b509291505056fea264697066735822122011c71d30e91cc09f03345b308a23353b486e6da3154feb0dbed609c18d51dc0064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}